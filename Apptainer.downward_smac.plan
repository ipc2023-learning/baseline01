# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:14.04
Stage: build

%files
    .

%post
    apt-get update
    apt-get -y install --no-install-recommends g++ g++-multilib make libboost-dev

    cd cedalion/src
    ./build_all -j8
    strip --strip-all preprocess/preprocess search/downward-release


# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:14.04
Stage: run

# Copy planner binary and required files from Stage 1.
%files from build
    cedalion/src/preprocess/preprocess
    cedalion/src/search/downward-release
    cedalion/src/translate
    plan.py

%post
    apt-get update
    apt-get -y install --no-install-recommends pypy
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%runscript
    #! /bin/bash
    set -euo pipefail
    DOMAIN_KNOWLEDGE_FILE="$1"
    DOMAIN_FILE="$2"
    PROBLEM_FILE="$3"
    PLAN_FILE="$4"

    pypy /plan.py "$DOMAIN_KNOWLEDGE_FILE" "$DOMAIN_FILE" "$PROBLEM_FILE" "$PLAN_FILE"

%labels
Name        Fast Downward SMAC 2014
Description Single Fast Downward configuration, optimized with SMAC for the given training tasks.
Authors     Jendrik Seipp <jendrik.seipp@liu.se>, Silvan Sievers <silvan.sievers@unibas.ch, Frank Hutter <fh@informatik.uni-freiburg.de>
License     GPL 3
Tracks      single-core
SupportsDerivedPredicates                       yes
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    yes
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
